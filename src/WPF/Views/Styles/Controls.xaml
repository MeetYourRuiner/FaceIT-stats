<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:v="clr-namespace:FaceitStats.WPF.Views">
    <Style TargetType="Image">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
    </Style>

    <!-- Button -->
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="{StaticResource AppOrange}"/>
            <Setter Property="Foreground" Value="{StaticResource AppWhite}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            Name="border"
                            Background="{TemplateBinding Background}"
                        >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AppLightOrange}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextBlock.Opacity" Value="0.75"/>
                <Setter Property="Background" Value="{StaticResource FaceitBackground}"/>
            </Trigger>
        </Style.Triggers>
        
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="3"/>
            </Style>
        </Style.Resources>
    </Style>
    
    <Style x:Key="LinkButton" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource AppControlBackground}"/>
            <Setter Property="Opacity" Value="0.75"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            Name="border"
                            Background="{TemplateBinding Background}"
                        >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="4"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="{StaticResource AppFont}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="2" BorderBrush="White" BorderThickness="1" >
                            <ContentPresenter  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AppOrange}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--Label-->
    <Style x:Key="InfoLabel" TargetType="{x:Type Label}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource AppControlBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource AppFont}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>
    <Style x:Key="FinalScoreLabel" TargetType="Label" BasedOn="{StaticResource InfoLabel}">
        <Setter Property="Height" Value="50" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="40"/>
    </Style>
    <Style x:Key="HalfScoreLabel" TargetType="Label" BasedOn="{StaticResource InfoLabel}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <!-- DataGrid -->
    <Style x:Key="ColumnElementStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10,0,0,0" />
    </Style>

    <Style x:Key="DGCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DGCBackground}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DGCellStyleWhiteFont" BasedOn="{StaticResource DGCellStyle}" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource AppFont}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DGStyle" TargetType="DataGrid">
        <Style.Setters>
            <Setter Property="Foreground" Value="{StaticResource AppFont}" />
            <Setter Property="RowBackground" Value="{StaticResource DGRowBackground}" />
            <Setter Property="GridLinesVisibility" Value="Horizontal" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="CanUserResizeColumns" Value="False" />
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="FontSize" Value="18" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DGLine}" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="CanUserSortColumns" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CellStyle" Value="{StaticResource DGCellStyleWhiteFont}" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
        </Style.Setters>
    </Style>

    <Style x:Key="DGColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Background" Value="{StaticResource AppControlBackground}" />
        <Setter Property="Padding" Value="10, 0"/>
    </Style>

    <Style x:Key="DGRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Margin" Value="0,0,0,2" />
    </Style>

    <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
        <Setter Property="Background" Value="{StaticResource AppControlBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource AppFont}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Opacity" Value="0.9"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    
    <!--Context Menu-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="{StaticResource AppControlBackground}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource AppOrange}"
                        >
                        <StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0, 3, 0 ,3" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Bd" Padding="17,0,17,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_38">
                        <ContentPresenter x:Name="ContentPresenter"  Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_33"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource AppItemBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window -->
    <sys:Double x:Key="AppHeight">800</sys:Double>
    <sys:Double x:Key="AppWidth">900</sys:Double>
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="/Resources/#Play" />
    </Style>

    <!-- TabControl :| -->
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <ControlTemplate.Resources>
                        <Style TargetType="TabItem">
                            <Setter Property="Foreground" Value="{StaticResource AppFont}"/>
                            <Setter Property="Height" Value="49"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TabItem">
                                        <Border Name="Border" BorderThickness="0, 0, 0, 1" Background="{StaticResource AppWindowBackground}" BorderBrush="Transparent" Margin="1">
                                            <ContentPresenter 
                                                x:Name="ContentSite"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                ContentSource="Header"
                                                Margin="10,2"
                                            />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AppOrange}"/>
                                                <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AppOrange}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <UniformGrid Rows="1" x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>